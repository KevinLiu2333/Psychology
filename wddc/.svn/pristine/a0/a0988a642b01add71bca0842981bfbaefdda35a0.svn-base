package com.wonders.sjfw.platform;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.nutz.ioc.loader.annotation.Inject;
import org.nutz.ioc.loader.annotation.IocBean;
import org.nutz.lang.Strings;
import org.nutz.mvc.annotation.At;
import org.nutz.mvc.annotation.Filters;
import org.nutz.mvc.annotation.Ok;

import com.wonders.sjfw.platform.jk.FwProcessor;
import com.wonders.sjfw.platform.spu.AlertSpu;
import com.wonders.sjfw.platform.spu.KeySpu;
import com.wonders.sjfw.platform.spu.ParamSpu;
import com.wonders.sjfw.platform.spu.SpuFactory;
import com.wonders.wddc.config.WddcConstants;
/**
 * 服务平台对外提供服务入口.
 *
 */
@At("/fw")
@IocBean
@Filters
public class FwOpenService {
	
	@Inject
	private KeySpu keySpu;

	@Inject
	private ParamSpu paramSpu;
	
	@Inject
	private AlertSpu alertSpu;
	/**
	 * 对外部提供服务
	 * @param request
	 * @param unitKey
	 * @param methodKey
	 * @param format
	 * @return
	 */
    @At
    @Ok("raw")
    public String services(HttpServletRequest request,String unitKey,String methodKey,String format,String rsStyle,String rsStructure) {
    	//创建开始日期
        Date startDate = new Date();
        //返回格式
        if(Strings.isBlank(format)){
        	format = WddcConstants.FORMAT_JSON;
        }
        
        //1.验证unitKey参数
        String validResult = keySpu.validUnitKey(unitKey,format,startDate);
        if(!FwProcessor.VAILD_PARAM_PASS.equals(validResult)){
        	return validResult;
        }
        //2.验证methodKey
        validResult = keySpu.validMethodKey(unitKey, methodKey,format,startDate);
        if(!FwProcessor.VAILD_PARAM_PASS.equals(validResult)){
        	return validResult;
        }
        //3.验证固定参数
        validResult = keySpu.validFwRSConfig(unitKey, format, startDate, rsStyle, rsStructure);
        if(!FwProcessor.VAILD_PARAM_PASS.equals(validResult)){
        	return validResult;
        }
        //4.组装参数
        FwParam fwParam = paramSpu.putOutParam(request, unitKey, methodKey,format,rsStyle,rsStructure,startDate);
        //4.1添加预警信息处理
        validResult = alertSpu.isAlert(fwParam);
        if(!FwProcessor.VAILD_PARAM_PASS.equals(validResult)){
        	return validResult;
        }
        //5.调用服务的处理单元处理服务
        String result = SpuFactory.getInstance().produce(fwParam);
        //6.返回服务结果
        return result;
    }
    
    /**
     * 对内部提供的服务.
     * @param request
     * @param unitKey
     * @param fwCode
     * @param format
     * @param rsStyle
     * @param rsStructure
     * @return
     */
    @At
    @Ok("raw")
    public String ptservices(HttpServletRequest request,String unitKey,String fwCode,String format,String rsStyle,String rsStructure) {
    	//创建开始日期
        Date startDate = new Date();
        //返回格式
        if(Strings.isBlank(format)){
        	format = WddcConstants.FORMAT_JSON;
        }
        //1.验证unitKey参数
        String validResult = keySpu.validUnitKey(unitKey,format,startDate);
        if(!FwProcessor.VAILD_PARAM_PASS.equals(validResult)){
        	return validResult;
        }

        //2.验证fwCode参数
        validResult = keySpu.validFwCode(unitKey,format,fwCode,startDate);
        if(!FwProcessor.VAILD_PARAM_PASS.equals(validResult)){
        	return validResult;
        }
        //3.验证固定参数
        validResult = keySpu.validFwRSConfig(unitKey, format, startDate, rsStyle, rsStructure);
        if(!FwProcessor.VAILD_PARAM_PASS.equals(validResult)){
        	return validResult;
        }
        //4.自动授权
        String methodKey = keySpu.autoMethodKey(unitKey,fwCode,startDate);
        //5.组装参数
        FwParam fwParam = paramSpu.putOutParam(request, unitKey, methodKey,format,rsStyle,rsStructure,startDate);
        //6.调用服务的处理单元处理服务
        String result = SpuFactory.getInstance().produce(fwParam);
        //7.返回服务结果
        return result;
    }
    

    @At
    @Ok("jsp:sjfw.publish.example")
    public Map<String, Object> example(HttpServletRequest request,String fwCode,String format){
    	//1.定义返回结果
        Map<String, Object> result = new HashMap<String, Object>();
        //1.1获取返回格式
        if(Strings.isBlank(format)){
        	format = WddcConstants.FORMAT_JSON;
        }
        //2.组装参数
        FwParam fwParam = paramSpu.putExampleParam(request,fwCode,format);
        //3.调用服务的处理单元处理服务
        String resultJson = SpuFactory.getInstance().produceExample(fwParam);
        //4.设置访问路径
        String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+request.getContextPath();
        //5.装载服务对象
        result.put("resultJson",resultJson);
        result.put("fwInfo",fwParam.fwInfo);
        result.put("fwConfigList",fwParam.fwConfigList);
        result.put("basePath",basePath);
        return result;
    }
    
   


}
