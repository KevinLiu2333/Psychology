<?xml version="1.0" encoding="utf-8"?>
<BaseWidget xmlns="com.esri.viewer.*" 
			xmlns:widgets		="com.esri.viewer.widgets.*"
			xmlns:mx="http://www.adobe.com/2006/mxml"
			xmlns:comp="com.esri.viewer.components.*" 
			widgetConfigLoaded="initMapMarkerWidget();">
	<mx:Script>
		<![CDATA[
			import com.esri.ags.Graphic;
			import com.esri.ags.Map;
			import com.esri.ags.events.DrawEvent;
			import com.esri.ags.events.MapMouseEvent;
			import com.esri.ags.geometry.*;
			import com.esri.ags.layers.GraphicsLayer;
			import com.esri.ags.symbols.*;
			import com.esri.ags.symbols.Symbol;
			import com.esri.ags.symbols.TextSymbol;
			import com.esri.ags.tools.DrawTool;
			import com.esri.ags.tools.NavigationTool;
			import com.esri.viewer.ViewerContainer;
			
			import flash.utils.getQualifiedClassName;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.Button;
			import mx.core.DragSource;
			import mx.events.CloseEvent;
			import mx.events.DragEvent;
			import mx.events.ItemClickEvent;
			import mx.managers.DragManager;
			
			
			[Bindable] private var iconManpower:String;
			[Bindable] public var iconFlag:String;
			[Bindable] public var iconResources:String;
	        [Bindable] public var iconBarrier:String;
			
			[Bindable]
			[Embed(source="assets/images/icons/i_guard.png")]
			public var iconGuard:Class;
			
			[Bindable]
			[Embed(source="assets/images/icons/i_pen.png")]
			public var iconPen:Class;
			
			[Bindable]
			[Embed(source="assets/images/icons/i_text.png")]
			public var iconText:Class;
	        
			[Bindable]
			[Embed(source="assets/images/icons/i_eraser.png")]
			public var iconEraser:Class;
	        
			[Bindable] private var mapCoordX:Number = 0;
			[Bindable] private var mapCoordY:Number = 0;
			
	        public var sym:Symbol = new Symbol();
	        private var graphicsLayer:GraphicsLayer = new GraphicsLayer();
	        
	        private var delGra:Graphic;
	       
	        private var flag:Number = 0;
	            
		    	    
	        private function initMapMarkerWidget():void
	        {
	        	
	        	if(configXML){
	        		iconManpower = configXML.iconManpower;
					iconFlag = configXML.iconFlag;
					iconBarrier = configXML.iconBarrier;
					iconResources=configXML.iconResources;
	        	}
	        	
				map.addLayer(graphicsLayer);
				addMapListerner();
				setMapNavigation(NavigationTool.PAN, "漫游");
	        }
	        
	        private function addMapListerner():void
	        {
	        	map.addEventListener(DragEvent.DRAG_DROP,moveFlagEnd);
				map.addEventListener(DragEvent.DRAG_OVER,dragOverHandler);
				map.addEventListener(DragEvent.DRAG_ENTER,dragEnterHandler); 
	        }
	        
	        private function removeMapListerner():void
	        {
	        	map.removeEventListener(DragEvent.DRAG_DROP,moveFlagEnd);
				map.removeEventListener(DragEvent.DRAG_OVER,dragOverHandler);
				map.removeEventListener(DragEvent.DRAG_ENTER,dragEnterHandler); 
	        }
	        
	        private function widgetClosedHandler(event:Event):void
			{
				removeMapListerner();
				graphicsLayer.visible = false;
				setMapNavigation(NavigationTool.PAN, "漫游");
				
			}
			private function widgetOpenedHandler(event:Event):void
			{
				addMapListerner();
				graphicsLayer.visible=true;
				if(flag_button){
					flag_button.label = "开始绘图";
				}
				flag=0;
				setMapNavigation(NavigationTool.PAN, "漫游");
				trace("------->widgetOpenedHandler");
			}
	
	        
	        private function iconSelectHandler(value:int):void
	        {
	        	
	        	switch(value)
	                	{
	                		case 0:
	                		{         			
	                			sym = new PictureMarkerSymbol(iconManpower, 36, 36);
	                			setMapAction(DrawTool.MAPPOINT, "添加人力", null, drawEnd);
	                			markerTip.text="在地图上单击以增加一个 人力 的注记。";
	                			break;
	                		}
	                		case 1:
	                		{
	                			sym = new PictureMarkerSymbol(iconFlag, 36, 36);
	                			setMapAction(DrawTool.MAPPOINT, "添加重要地点", null, drawEnd);
	                			markerTip.text="在地图上单击以增加一个 重要地点 的注记。";
	                			break;
	                		}
	                		case 2:
	                		{
	                			sym = new PictureMarkerSymbol(iconBarrier, 36, 36);
	                			setMapAction(DrawTool.MAPPOINT, "添加路障", null, drawEnd);
	                			markerTip.text="在地图上单击以增加一个 路障 的注记。";
	                			break;
	                		}
	                		case 3:
	                		{
	                			sym = new PictureMarkerSymbol(iconResources, 36, 36);
	                			setMapAction(DrawTool.MAPPOINT, "添加资源", null, drawEnd);
	                			markerTip.text="在地图上单击以增加一个 资源 的注记。";
	                			break;
	                		}
	                	
	                		case 4:
	                		{
								if(flag==1)
								{
		                			setMapAction(DrawTool.FREEHAND_POLYLINE, "绘图", null, drawEnd);
		                			markerTip.text="选择要使用的颜色和线条粗细，在地图上绘制图形。";
								}
	                			break;
	                		}
	                		case 5:
	                		{
	                			sym=new TextSymbol();
								setMapAction(DrawTool.MAPPOINT, "文字标注", null, drawEnd);
								markerTip.text="输入文字后，在地图上单击以增加一个 文字标注。";
								break;
	                		}
	                		case 6:
	                		{
	                			graphicsLayer.clear();
								setMapNavigation(NavigationTool.PAN, "漫游");
								markerTip.text="选择一种方式在地图上添加注记：";
								break;
	                		}
	                		case 7:
	                		{
								setMapNavigation(NavigationTool.PAN, "漫游");
								markerTip.text="单击图标进行清除操作：";
								break;
	                		}
	                	}
	                	
	                	//setMapAction(null,"MapMarker",null);
	                	
	        }
	         private function drawMapClickHandler(event:MapMouseEvent):void
	        {
	        	
	        	var clickGraphic:Graphic=new Graphic(event.mapPoint,sym);
	     		graphicsLayer.add(clickGraphic);
	        }
	        
	        	private function drawEnd(event:DrawEvent):void
			{
				var geom:Geometry = event.graphic.geometry;
				var gra:Graphic = new Graphic(geom);
				switch (geom.type)  
	            {         
	            	case Geometry.MAPPOINT:
	            	{
	                	//var ptSym:SimpleMarkerSymbol = new SimpleMarkerSymbol("circle", 12, 0xFF0000);
	                	
	                	if(sym is TextSymbol)
	                	{
	                		var txtFormat:TextFormat=new TextFormat();
								txtFormat.size=fontSizeStp.value;
							sym=new TextSymbol(theText.text,null, ftColor.selectedColor,false, 0x000000,false,0xFFFFFF,"middle",0,0,0, txtFormat,null,null);	
								
	                	} 
	                	gra.symbol = sym;
	                	gra.addEventListener(MouseEvent.MOUSE_DOWN,moveStart);
	            		gra.addEventListener(MouseEvent.MOUSE_UP,moveEnd);
	            		
	            		setMapNavigation(NavigationTool.PAN,"漫游");	
	            		break;
	            	}
	            		
	            	case Geometry.POLYLINE:
	            	{
	            		var lineSym:SimpleLineSymbol = new SimpleLineSymbol("solid",tsColor.selectedColor, 1,tfSize.value);
	            		gra.symbol = lineSym;
	            		gra.addEventListener(MouseEvent.DOUBLE_CLICK,deleGraphic);
	            		break;
	            	}
	            		              
	            	case Geometry.POLYGON:
	            	{
	            		var outlineSym:SimpleLineSymbol = new SimpleLineSymbol("solid",0xFF0000, 1, 2);
	            		var polySym:SimpleFillSymbol = new SimpleFillSymbol("diagonalcross", 0xFF0000, 0.3, outlineSym);
	            		gra.symbol = polySym;
	            		
	            		setMapNavigation(NavigationTool.PAN,"漫游");
	            		break;
	            	}
	            }
	            
	            
	            graphicsLayer.add(gra);
	            
			}
			
			private function moveStart(event:MouseEvent):void
			{
				var gra:Graphic = event.currentTarget as Graphic;
				gra.startDrag();
			}
			private function moveEnd(event:MouseEvent):void
			{
				var gra:Graphic = event.currentTarget as Graphic;
				gra.stopDrag();
				var mapPoint:MapPoint = map.toMapFromStage(event.stageX, event.stageY);
				mapCoordX = mapPoint.x;
				mapCoordY = mapPoint.y;
				gra.geometry = new MapPoint(mapCoordX,mapCoordY);
				
			}
			
			private function moveFlagStart(event:MouseEvent,object:String):void
			{
	            var dragInitiator:Image= event.currentTarget as Image;;
	            var ds:DragSource = new DragSource();
	            ds.addData(dragInitiator, "img");             
	            ds.addData(new PictureMarkerSymbol(object, 36, 36),"sym");
	            DragManager.doDrag(dragInitiator, ds, event);
			}
			
			private function moveTextStart(event:MouseEvent):void
			{
	            var dragInitiator:Image= event.currentTarget as Image;
	            
	            var ds:DragSource = new DragSource();
	            ds.addData(dragInitiator, "img");
	            var txtFormat:TextFormat=new TextFormat();
				txtFormat.size=fontSizeStp.value;
				sym=new TextSymbol(theText.text,null, ftColor.selectedColor,false, 0x000000,false,0xFFFFFF,"middle",0,0,0, txtFormat,null,null);	
	            ds.addData(sym,"sym");
	            DragManager.doDrag(dragInitiator, ds, event);
			}
			
			private function dragEnterHandler(event:DragEvent):void 
			{
				if (event.dragSource.hasFormat("img"))
				{
					DragManager.acceptDragDrop(Map(event.currentTarget));
				}
	        }
	        
	        private function dragOverHandler(event:DragEvent):void
			{
	            if (event.dragSource.hasFormat("img"))
	            {
	              DragManager.showFeedback(DragManager.COPY);
	            }                     
	        }
			private function moveFlagEnd(event:DragEvent):void
			{
				 if (event.dragSource.hasFormat("img")) 
				 {
	              	var cx:Number=event.stageX;
	              	var cy:Number=event.stageY;
	              	var sym:Symbol=event.dragSource.dataForFormat('sym') as Symbol;
	              	var mapPoint:MapPoint = map.toMapFromStage(cx,cy);
	              	
	           		var clickGraphic:Graphic=new Graphic(mapPoint,sym);
	     			graphicsLayer.add(clickGraphic);
	     			clickGraphic.addEventListener(MouseEvent.MOUSE_DOWN,moveStart);
	            	clickGraphic.addEventListener(MouseEvent.MOUSE_UP,moveEnd);
	            	clickGraphic.addEventListener(MouseEvent.DOUBLE_CLICK,deleGraphic);
	            	
	             }
			}
			
			private function deleHandler(event:CloseEvent):void
			{
				if (event.detail == Alert.YES)
				{
					delGra.removeEventListener(MouseEvent.MOUSE_DOWN,moveStart);
	            	delGra.removeEventListener(MouseEvent.MOUSE_UP,moveEnd);
	            	delGra.removeEventListener(MouseEvent.DOUBLE_CLICK,deleGraphic);
					graphicsLayer.remove(delGra);
				}else
				{
				}
			}
			
			private function deleGraphic(event:MouseEvent):void
			{
				delGra = event.currentTarget as Graphic;
				Alert.show("是否确定删除？", "删除提示", Alert.YES | Alert.NO, map, deleHandler, null, Alert.NO);
			}
	
			
			private function tabChange():void
			{
				if(markerTab.selectedIndex==2)
				{
					flag=0;
					changeEdit();
				}
				else if(markerTab.selectedIndex==3)
				{
					iconSelectHandler(7);
				}
				else
				{
					markerTip.text="拖动图标在地图上添加注记：";
					setMapNavigation(NavigationTool.PAN, "漫游");
				}
			}
			
			private function changeEdit():void{
				if(flag==1){
					setMapNavigation(NavigationTool.PAN, "漫游");
					flag_button.label = "开始绘图";
					flag=0;
				}else if(flag==0){
					flag_button.label = "结束绘图";
					setMapAction(DrawTool.FREEHAND_POLYLINE, "绘图", null, drawEnd);
	                markerTip.text="选择要使用的颜色和线条粗细，在地图上绘制图形。";
	                flag=1;
				}
			}
	
		]]>
	</mx:Script>

	<WidgetTemplate id="widgetTempalte" width="400" height="200"
		 closed="widgetClosedHandler(event)" open="widgetOpenedHandler(event)">
		<mx:VBox  width="360" horizontalAlign="center" verticalAlign="middle" height="100%">
			<mx:Label id="markerTip" text="拖动图标在地图上添加注记：" styleName="WidgetText"/>
			<mx:TabNavigator id="markerTab" width="360" height="100%"  change="tabChange()">
				<mx:HBox label="图形标注" horizontalGap="20" horizontalAlign="center">
					<mx:VBox>
						<mx:Label text="人力" styleName="WidgetText"/>
						<mx:Image source="{iconManpower}" mouseDown="moveFlagStart(event,iconManpower)" toolTip="人力" useHandCursor="true" buttonMode="true"/>
		  			</mx:VBox>
		  			<mx:VBox>
						<mx:Label text="重要地点" styleName="WidgetText"/>
						<mx:Image source="{iconFlag}" mouseDown="moveFlagStart(event,iconFlag)" toolTip="重要地点" useHandCursor="true" buttonMode="true"/>
		  			</mx:VBox>
		  			<mx:VBox>
						<mx:Label text="路障" styleName="WidgetText"/>
						<mx:Image source="{iconBarrier}" mouseDown="moveFlagStart(event,iconBarrier)" toolTip="路障" useHandCursor="true" buttonMode="true"/>
		  			</mx:VBox>
		  			<mx:VBox>
						<mx:Label text="资源" styleName="WidgetText"/>
						<mx:Image source="{iconResources}" mouseDown="moveFlagStart(event,iconResources)" toolTip="资源" useHandCursor="true" buttonMode="true"/>
		  			</mx:VBox>
		  			
				</mx:HBox>
				<mx:HBox label="文字标注"   horizontalAlign="center" verticalAlign="middle">
					<mx:Image source="{iconText}" mouseDown="moveTextStart(event)" toolTip="文字标注" useHandCursor="true" buttonMode="true"/>
					<mx:Form>
						<mx:FormItem label="输入文字：" styleName="WidgetText">
							<mx:TextInput maxChars="20"  width="100" id="theText" />
						</mx:FormItem>
						<mx:FormItem label="字号及颜色" styleName="WidgetText" direction="horizontal">		
							<mx:NumericStepper id="fontSizeStp" minimum="0" maximum="40" stepSize="1" value="20" width="47"/>
							<mx:ColorPicker id="ftColor" selectedColor="#FF0000" />
						</mx:FormItem>
					</mx:Form>
				</mx:HBox>
				<mx:HBox label="手绘图形" horizontalAlign="center" verticalAlign="middle">
					<mx:Image source="{iconPen}" click="iconSelectHandler(4)" toolTip="绘图"/>
					<mx:Label text="颜色：" styleName="WidgetText"/>
					<mx:ColorPicker id="tsColor" selectedColor="#FF0000" />
					<mx:Label text="磅值：" styleName="WidgetText"/>
			  		<mx:HSlider id="tfSize" minimum="0" maximum="40" value="10" liveDragging="true" snapInterval="1" width="80" />
					<mx:Button id="flag_button" label="结束绘图" click="changeEdit()" />
				</mx:HBox>
				<mx:HBox label="清除" horizontalAlign="center" verticalAlign="middle">
					<mx:Label text="清除" styleName="WidgetText"/>
						<mx:Image source="{iconEraser}" click="iconSelectHandler(6)" toolTip="清除" useHandCursor="true" buttonMode="true"/>
				</mx:HBox>
		
			</mx:TabNavigator>
		</mx:VBox>
	</WidgetTemplate>
</BaseWidget>
