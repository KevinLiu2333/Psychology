<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   creationComplete="init()">
	<mx:ComboBox id="eventinfolist"
				 width="150" change="eventChanged()">
		<mx:Script>
			<![CDATA[
				import com.esri.viewer.AppEvent;
				import com.esri.viewer.ViewerContainer;
				
				import mx.controls.Alert;
				import mx.events.ListEvent;
				import mx.managers.CursorManager;
				import mx.rpc.events.FaultEvent;
				import mx.rpc.events.ResultEvent;
				import mx.rpc.http.HTTPService;
				private var loader:URLLoader;
				private var request:URLRequest;
				private var externalXML:XML;
				private var eventArr:Array;
				private var params:Object={}; 
				private var callEventId:String="";
				private function init():void
				{
					ViewerContainer.addEventListener(AppEvent.LAYER_LOADED, onActLayerLoad);
					eventinfolist.prompt="——事件列表——";
					eventinfolist.selectedIndex=-1;

					var request:URLRequest=new URLRequest("config.xml");

					loader=new URLLoader();

					try
					{
						loader.load(request);
					}
					catch (error:SecurityError)
					{
						trace("不具备访问的权限。");
					}
					loader.addEventListener(Event.COMPLETE, loaderCompleteHandler);


				}
				private function onActLayerLoad(event:AppEvent):void
				{
					var query:String=ExternalInterface.call("window.location.search.substring", 1);
					if (query)
						{
							//Alert.show(query+",isMapPrepared="+isMapPrepared);
							var pairs:Array=query.split("&");
							 
							for (var m:uint=0; m < pairs.length; m++)
							{
								var pos:int=pairs[m].indexOf("=");
								if (pos != -1)
								{
									var argname:String=pairs[m].substring(0, pos);
									var value:String=pairs[m].substring(pos + 1);
	
									params[argname]=value;
								}
							}
								//Alert.show(params["eventid"]);
								callEventId=params["eventid"];
	
						}
						if(callEventId!="")
						{
							for each (var sobj:Object in eventinfolist.dataProvider)
							{
								if(sobj.ID==callEventId)
								{
									eventinfolist.selectedItem=sobj;
									eventChanged();
									eventinfolist.enabled=false;
								}
								
							}
							
						}
					
				}
				private function initEventInfoData(event:AppEvent):void
				{
					ViewerContainer.eventInfoData=event.data as Object;
				}
				private function eventChanged():void
				{
					var eventdata:Object=eventinfolist.selectedItem;
					ViewerContainer.eventInfoData=eventdata;
					ViewerContainer.dispatchEvent(new AppEvent(AppEvent.EVENT_LIST_UPDATED, eventdata));
				}

				private function loaderCompleteHandler(event:Event):void
				{

					try
					{
						externalXML=new XML(loader.data);
						readNodes();
					}
					catch (e:TypeError)
					{
						trace("未找到相应的文件，请检查文件名是否正确。");
					}
				}

				private function readNodes():void
				{


					CursorManager.setBusyCursor();
					var httpservice:HTTPService=new HTTPService();
					httpservice.url=externalXML.gisServerIP.toString()+externalXML.databaseInfos.databaseinfo.url.toString();
					httpservice.addEventListener(FaultEvent.FAULT, onFault);
					httpservice.addEventListener(ResultEvent.RESULT, onResult);
					var obj:Object=new Object();
					httpservice.resultFormat="e4x";
					obj.flag="eventinfoflag";
					obj.requestinfo=externalXML.databaseInfos.databaseinfo.title.toString();
					httpservice.send(obj);
					function onResult(event:ResultEvent):void
					{
						
						var eventRts:XML=event.result as XML;
						if(eventRts!=null){
							eventArr=new Array;
						var eventlist:XMLList=eventRts.eventInfo;
						for (var i:Number=0; i < eventlist.length(); i++)
						{
							var eID:String=eventlist[i].EVENTID;
							var eTitle:String=eventlist[i].EVENTTITLE;
							var eventType:String=eventlist[i].EVENTTYPE;
							var eDesc:String=eventlist[i].EVENTDESC;
							var eLon:Number=Number(eventlist[i].EVENTLON.toString());
							var eLat:Number=Number(eventlist[i].EVENTLAT.toString());

							var obj:Object={label: eTitle, ID: eID, type: eventType, desc: eDesc, lon: eLon, lat: eLat}
							eventArr.push(obj);
						}

						
						eventinfolist.dataProvider=eventArr;
						}else{
							//TODO:异常处理
						}
						
						CursorManager.removeBusyCursor();

					}
					function onFault(event:FaultEvent):void
					{
						trace("false:" + event.fault);
					}
				}
			]]>
		</mx:Script>
	</mx:ComboBox>
</mx:Canvas>
